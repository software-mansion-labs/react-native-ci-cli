<%
const isMonorepo = props.pathRelativeToRoot !== '.'

const install = {
  yarn: "yarn",
  npm: "npm install"
}

const build = {
  yarn: `yarn ${(isMonorepo) ? `--cwd ${props.pathRelativeToRoot} ` : ""}build:release:android`,
  npm: `npm run build:release:android ${(isMonorepo) ? `--prefix ${props.pathRelativeToRoot}` : ""}`
}
%>

name: Build Android Release App

on:
  pull_request: <%= (isMonorepo) ? `
    paths:
      - ${props.pathRelativeToRoot}/**` : "" %>

jobs:
  lookup-cached-build:
    runs-on: ubuntu-latest
    outputs:
      build-exists: ${{ steps.android-release-restore.outputs.cache-hit }}
    steps:
      - name: 🐛 Try to restore build from cache
        id: android-release-restore
        uses: actions/cache/restore@v4
        with:
          lookup-only: true
          path: android-release-build/
          key: android-release-build-${{ github.event.pull_request.head.sha }}

  build-release-android:
    needs: lookup-cached-build 
    if: needs.lookup-cached-build.outputs.build-exists != 'true'
    runs-on: ubuntu-latest
    steps:
      - name: 🏗 Checkout repository
        uses: actions/checkout@v4

      - name: 📦 Install dependencies
        run: <%= install[props.packageManager] %>

      - name: ☕ Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'zulu'
          cache: 'gradle'

      - name: 🛠️ Build
        run: <%= build[props.packageManager] %>

      - name: 📁 Prepare cache folder 
        run: |
          mkdir android-release-build
          mv android/app/build/outputs/apk/release/app-release.apk android-release-build/android-release.apk
          mv android/app/build/outputs/apk/androidTest/release/app-release-androidTest.apk android-release-build/android-release-test.apk

      - name: 📡 Store built app in cache
        id: android-release-save
        uses: actions/cache/save@v4
        with:
          path: android-release-build/
          key: android-release-build-${{ github.event.pull_request.head.sha }}
