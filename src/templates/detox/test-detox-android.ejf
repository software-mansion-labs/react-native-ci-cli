<%
const install = {
  yarn: "yarn",
  npm: "npm install"
}

const startBundler = {
  yarn: `yarn --cwd ${props.pathRelativeToRoot} start`,
  npm: `npm run start --prefix ${props.pathRelativeToRoot}`
}

const runTests = {
  yarn: `yarn --cwd ${props.pathRelativeToRoot} detox:test:android`,
  npm: `npm run detox:test:android --prefix ${props.pathRelativeToRoot}`
}
%>

name: Test Detox Android

on: [pull_request]

jobs:
  build-debug-android:
    uses: ./.github/workflows/build-debug-android.yml

  test-detox-android:
    runs-on: ubuntu-latest
    needs: [build-debug-android]
    timeout-minutes: 60
    env:
      API_LEVEL: 34
    steps:
      - name: 🏗 Checkout repository
        uses: actions/checkout@v4

      - name: 📦 Install dependencies
        run: <%= install[props.packageManager] %>

      - name: 📦 Install AVD dependencies
        run: |
          sudo apt update
          sudo apt-get install -y libpulse0 libgl1

      - name: ☕ Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'zulu'
          cache: 'gradle'

      - name: 🐛 Try to restore build from cache
        id: android-debug-restore
        uses: actions/cache/restore@v4
        with:
          path: android-debug-build/
          key: android-debug-build

      - name: 🏎️ Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
  
      - name: 📱 AVD cache
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ env.API_LEVEL }}
      
      - name: 📋 Run Detox tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ env.API_LEVEL }}
          target: google_apis
          disable-animations: false
          emulator-options: -no-snapshot -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -camera-front none
          avd-name: e2e_emulator
          arch: x86_64
          script: |
            <%= startBundler[props.packageManager] %> & <%= runTests[props.packageManager] %>; x=$?; kill -9 $(pgrep -f "[n]ode_modules/.bin/expo.start") || true; exit $x
